{"version":3,"sources":["js/moves.js"],"names":["PlayerMoves","calcAttack","player","enemy","currentPlayer","currentEnemy","getPlayerSpeed","speed","getEnemySpeed","playerAttack","calcBaseDamage","mana","strength","agility","ofsetDamage","Math","floor","random","calcoutPutDamage","numberOfHits","attackValues","enemyAttack","getPlayerHealth","document","querySelector","getEnemyHealth","playerAttackValues","totalDamage","health","alert","classType","innerHTML","enemyAttackValues","enemyType","SpecialPlayerMoves"],"mappings":"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","file":"moves.ce71a3e6.js","sourceRoot":"..","sourcesContent":["let PlayerMoves = {\r\n  calcAttack: function(player, enemy) {\r\n    let currentPlayer = player;\r\n    let currentEnemy = enemy;\r\n    //determinar quien ataca primero\r\n    let getPlayerSpeed = player.speed;\r\n    let getEnemySpeed = enemy.speed;\r\n    //player attacks\r\n\r\n    let playerAttack = function(currentPlayer) {\r\n      let calcBaseDamage;\r\n      if (currentPlayer.mana > 0) {\r\n        calcBaseDamage = (currentPlayer.strength * currentPlayer.mana) / 1000;\r\n      } else {\r\n        calcBaseDamage =\r\n          (currentPlayer.strength * currentPlayer.agility) / 1000;\r\n      }\r\n      //calcular un ataque que no sea siempre el mismo\r\n      let ofsetDamage = Math.floor(Math.random() * Math.floor(10));\r\n      let calcoutPutDamage = calcBaseDamage + ofsetDamage;\r\n      //para ver cuantas veces ataca\r\n\r\n      let numberOfHits =\r\n        Math.floor(\r\n          (Math.random() * Math.floor(currentPlayer.agility / 10)) / 2\r\n        ) + 1;\r\n      let attackValues = [calcoutPutDamage, numberOfHits];\r\n      return attackValues;\r\n    };\r\n\r\n    //enemy attacks\r\n    let enemyAttack = function(currentEnemy) {\r\n      let calcBaseDamage;\r\n      if (currentEnemy.mana > 0) {\r\n        calcBaseDamage = (currentEnemy.strength * currentEnemy.mana) / 1000;\r\n      } else {\r\n        calcBaseDamage = (currentEnemy.strength * currentEnemy.agility) / 1000;\r\n      }\r\n      //calcular un ataque que no sea siempre el mismo\r\n      let ofsetDamage = Math.floor(Math.random() * Math.floor(10));\r\n      let calcoutPutDamage = calcBaseDamage + ofsetDamage;\r\n      //para ver cuantas veces ataca\r\n\r\n      let numberOfHits =\r\n        Math.floor(\r\n          (Math.random() * Math.floor(currentEnemy.agility / 10)) / 2\r\n        ) + 1;\r\n      let attackValues = [calcoutPutDamage, numberOfHits];\r\n      return attackValues;\r\n    };\r\n    //conseguir la vida de personajes para modificarla\r\n    let getPlayerHealth = document.querySelector(\".health-player\");\r\n    let getEnemyHealth = document.querySelector(\".health-enemy\");\r\n\r\n    //iniciar ataques dependiendo de quien es mas rapido\r\n\r\n    if (getPlayerSpeed >= getEnemySpeed) {\r\n      let playerAttackValues = playerAttack(currentPlayer);\r\n      let totalDamage = playerAttackValues[0] * playerAttackValues[1];\r\n      enemy.health = enemy.health - totalDamage;\r\n      alert(\r\n        \"Your \" +\r\n          currentPlayer.classType +\r\n          \" hits for \" +\r\n          playerAttackValues[0] +\r\n          \" damage \" +\r\n          playerAttackValues[1] +\r\n          \" times.\"\r\n      );\r\n\r\n      if (enemy.health <= 0) {\r\n        alert(\"You won! Refresh the Browser to play Again\");\r\n        getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        getEnemyHealth.innerHTML = \"Health: 0\";\r\n      } else {\r\n        getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        //cuando el enemigo ataca si no esta muerto\r\n\r\n        let enemyAttackValues = enemyAttack(currentEnemy);\r\n        let totalDamage = enemyAttackValues[0] * enemyAttackValues[1];\r\n        player.health = player.health - totalDamage;\r\n        alert(\r\n          \"The enemy \" +\r\n            currentEnemy.enemyType +\r\n            \" hits for \" +\r\n            enemyAttackValues[0] +\r\n            \" damage \" +\r\n            enemyAttackValues[1] +\r\n            \" times.\"\r\n        );\r\n\r\n        if (player.health <= 0) {\r\n          alert(\"You loose! Refresh the Browser to play Again\");\r\n          getPlayerHealth.innerHTML = \"Health: 0\";\r\n          getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        } else {\r\n          getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        }\r\n      }\r\n    }\r\n\r\n    // si el enemigo es mas rapido que el jugador\r\n    if (getEnemySpeed >= getPlayerSpeed) {\r\n      let enemyAttackValues = enemyAttack(currentEnemy);\r\n      let totalDamage = enemyAttackValues[0] * enemyAttackValues[1];\r\n      player.health = player.health - totalDamage;\r\n      alert(\r\n        \"The enemy \" +\r\n          currentEnemy.enemyType +\r\n          \" hits for \" +\r\n          enemyAttackValues[0] +\r\n          \" damage \" +\r\n          enemyAttackValues[1] +\r\n          \" times.\"\r\n      );\r\n\r\n      if (player.health <= 0) {\r\n        alert(\"You loose! Refresh the Browser to play Again\");\r\n        getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        getPlayerHealth.innerHTML = \"Health: 0\";\r\n      } else {\r\n        getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        //cuando el player ataca si no esta muerto\r\n\r\n        let playerAttackValues = playerAttack(currentPlayer);\r\n        let totalDamage = playerAttackValues[0] * playerAttackValues[1];\r\n        enemy.health = enemy.health - totalDamage;\r\n        alert(\r\n          \"Your \" +\r\n            currentPlayer.classType +\r\n            \" hits for \" +\r\n            playerAttackValues[0] +\r\n            \" damage \" +\r\n            playerAttackValues[1] +\r\n            \" times.\"\r\n        );\r\n\r\n        if (enemy.health <= 0) {\r\n          alert(\"You win! Refresh the Browser to play Again\");\r\n          getEnemyHealth.innerHTML = \"Health: 0\";\r\n          getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        } else {\r\n          getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n//\r\n//FUNCIONALIDAD PARA ATAQUE ESPECIAL\r\n//\r\n\r\nlet SpecialPlayerMoves = {\r\n  calcAttack: function(player, enemy) {\r\n    let currentPlayer = player;\r\n    let currentEnemy = enemy;\r\n    //determinar quien ataca primero\r\n    let getPlayerSpeed = player.speed;\r\n    let getEnemySpeed = enemy.speed;\r\n    //player attacks\r\n\r\n    let playerAttack = function(currentPlayer) {\r\n      let calcBaseDamage;\r\n      if (currentPlayer.mana > 0) {\r\n        calcBaseDamage = (currentPlayer.strength * currentPlayer.mana) / 1000;\r\n      } else {\r\n        calcBaseDamage =\r\n          (currentPlayer.strength * currentPlayer.agility) / 1000;\r\n      }\r\n      //calcular un ataque que no sea siempre el mismo\r\n      let ofsetDamage = Math.floor(Math.random() * Math.floor(10));\r\n      let calcoutPutDamage = calcBaseDamage + ofsetDamage;\r\n      //para ver cuantas veces ataca\r\n\r\n      let numberOfHits =\r\n        Math.floor(\r\n          (Math.random() * Math.floor(currentPlayer.agility / 10)) / 2\r\n        ) + 1;\r\n      let attackValues = [calcoutPutDamage, numberOfHits];\r\n      return attackValues;\r\n    };\r\n\r\n    //enemy attacks\r\n    let enemyAttack = function(currentEnemy) {\r\n      let calcBaseDamage;\r\n      if (currentEnemy.mana > 0) {\r\n        calcBaseDamage = (currentEnemy.strength * currentEnemy.mana) / 1000;\r\n      } else {\r\n        calcBaseDamage = (currentEnemy.strength * currentEnemy.agility) / 1000;\r\n      }\r\n      //calcular un ataque que no sea siempre el mismo\r\n      let ofsetDamage = Math.floor(Math.random() * Math.floor(10));\r\n      let calcoutPutDamage = calcBaseDamage + ofsetDamage;\r\n      //para ver cuantas veces ataca\r\n\r\n      let numberOfHits =\r\n        Math.floor(\r\n          (Math.random() * Math.floor(currentEnemy.agility / 10)) / 2\r\n        ) + 1;\r\n      let attackValues = [calcoutPutDamage, numberOfHits];\r\n      return attackValues;\r\n    };\r\n    //conseguir la vida de personajes para modificarla\r\n    let getPlayerHealth = document.querySelector(\".health-player\");\r\n    let getEnemyHealth = document.querySelector(\".health-enemy\");\r\n\r\n    //iniciar ataques dependiendo de quien es mas rapido\r\n\r\n    if (getPlayerSpeed >= getEnemySpeed) {\r\n      let playerAttackValues = playerAttack(currentPlayer);\r\n      let totalDamage = playerAttackValues[0] * playerAttackValues[1];\r\n      enemy.health = enemy.health - totalDamage;\r\n      alert(\r\n        \"Your \" +\r\n          currentPlayer.classType +\r\n          \" hits for \" +\r\n          playerAttackValues[0] +\r\n          \" damage \" +\r\n          playerAttackValues[1] +\r\n          \" times.\"\r\n      );\r\n\r\n      if (enemy.health <= 0) {\r\n        alert(\"You won! Refresh the Browser to play Again\");\r\n        getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        getEnemyHealth.innerHTML = \"Health: 0\";\r\n      } else {\r\n        getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        //cuando el enemigo ataca si no esta muerto\r\n\r\n        let enemyAttackValues = enemyAttack(currentEnemy);\r\n        let totalDamage = enemyAttackValues[0] * enemyAttackValues[1];\r\n        player.health = player.health - totalDamage;\r\n        alert(\r\n          \"The enemy \" +\r\n            currentEnemy.enemyType +\r\n            \" hits for \" +\r\n            enemyAttackValues[0] +\r\n            \" damage \" +\r\n            enemyAttackValues[1] +\r\n            \" times.\"\r\n        );\r\n\r\n        if (player.health <= 0) {\r\n          alert(\"You loose! Refresh the Browser to play Again\");\r\n          getPlayerHealth.innerHTML = \"Health: 0\";\r\n          getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        } else {\r\n          getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        }\r\n      }\r\n    }\r\n\r\n    // si el enemigo es mas rapido que el jugador\r\n    if (getEnemySpeed >= getPlayerSpeed) {\r\n      let enemyAttackValues = enemyAttack(currentEnemy);\r\n      let totalDamage = enemyAttackValues[0] * enemyAttackValues[1];\r\n      player.health = player.health - totalDamage;\r\n      alert(\r\n        \"The enemy \" +\r\n          currentEnemy.enemyType +\r\n          \" hits for \" +\r\n          enemyAttackValues[0] +\r\n          \" damage \" +\r\n          enemyAttackValues[1] +\r\n          \" times.\"\r\n      );\r\n\r\n      if (player.health <= 0) {\r\n        alert(\"You loose! Refresh the Browser to play Again\");\r\n        getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        getPlayerHealth.innerHTML = \"Health: 0\";\r\n      } else {\r\n        getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        //cuando el player ataca si no esta muerto\r\n\r\n        let playerAttackValues = playerAttack(currentPlayer);\r\n        let totalDamage = playerAttackValues[0] * playerAttackValues[1];\r\n        enemy.health = enemy.health - totalDamage;\r\n        alert(\r\n          \"Your \" +\r\n            currentPlayer.classType +\r\n            \" hits for \" +\r\n            playerAttackValues[0] +\r\n            \" damage \" +\r\n            playerAttackValues[1] +\r\n            \" times.\"\r\n        );\r\n\r\n        if (enemy.health <= 0) {\r\n          alert(\"You win! Refresh the Browser to play Again\");\r\n          getEnemyHealth.innerHTML = \"Health: 0\";\r\n          getPlayerHealth.innerHTML = \"Health: \" + player.health;\r\n        } else {\r\n          getEnemyHealth.innerHTML = \"Health: \" + enemy.health;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport { PlayerMoves, SpecialPlayerMoves };\r\n"]}